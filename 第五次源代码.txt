1.低通巴特沃斯
clc;clear;
img=imread('test2.tif');
p=im2double(img);
f=fft2(p);%傅里叶变换
g=fftshift(f);%转换数据矩阵
[N1,N2]=size(g);
n=2;%巴特沃斯低通滤波器阶数
D0=25;%截止频率
n1=fix(N1/2);
n2=fix(N2/2);
for i=1:N1
   for j=1:N2
        d(i,j)=sqrt((i-n1)^2+(j-n2)^2);
        h1(i,j)=1/(1+(d(i,j)/D0)^(2*n));%计算低通滤波器传递函数
        s1(i,j)=h1(i,j)*g(i,j);
   end
end
s=im2uint8(real(ifft2(ifftshift(s1))));
figure;
subplot(1,2,1);
imshow(img);
title('test2原图');
subplot(1,2,2);
imshow(s);
title('test2经巴特沃斯低通滤波');
imwrite(s,'test2经巴特沃斯低通滤波.bmp');
x=0,y=0;
for i=1:N1
    for j=1:N2
        L1=(abs(s1(i,j)))^2;
        y=y+L1;
        L=(abs(g(i,j)))^2;
        x=x+L;
    end
end
L=y/x;%计算功率谱比


2.低通高斯
clc;clear;
img=imread('test2.tif');
p=im2double(img);
f=fft2(p);%傅里叶变换
g=fftshift(f);%转换数据矩阵
[N1,N2]=size(g);
D0=25;%截止频率
n1=fix(N1/2);
n2=fix(N2/2);
for i=1:N1
   for j=1:N2
        d(i,j)=sqrt((i-n1)^2+(j-n2)^2);
        h1(i,j)=exp(-d(i,j)^2/(2*D0^2));%计算低通滤波器传递函数
        s1(i,j)=h1(i,j)*g(i,j);
   end
end
s=im2uint8(real(ifft2(ifftshift(s1))));
figure;
subplot(1,2,1);
imshow(img);
title('test2原图');
subplot(1,2,2);
imshow(s);
title('test2经高斯低通滤波');
imwrite(s,'test2经高斯低通滤波.bmp');
x=0,y=0;
for i=1:N1
    for j=1:N2
        L1=(abs(s1(i,j)))^2;
        y=y+L1;
        L=(abs(g(i,j)))^2;
        x=x+L;
    end
end
L=y/x;%计算功率谱比



3.高通巴特沃斯
clc;clear;
img=imread('test4 copy.bmp');
p=im2double(img);
f=fft2(p);%傅里叶变换
g=fftshift(f);%转换数据矩阵
[N1,N2]=size(g);
n=2;%巴特沃斯低通滤波器阶数
D0=25;%截止频率
n1=fix(N1/2);
n2=fix(N2/2);
for i=1:N1
   for j=1:N2
        d(i,j)=sqrt((i-n1)^2+(j-n2)^2);
        h(i,j)=1/(1+(D0/d(i,j))^(2*n));%计算低通滤波器传递函数
        s1(i,j)=h(i,j)*g(i,j);
   end
end
s=im2uint8(real(ifft2(ifftshift(s1))));
figure;
subplot(1,2,1);
imshow(img);
title('test4原图');
subplot(1,2,2);
imshow(s);
title('test4经巴特沃斯高通滤波');
imwrite(s,'test4经巴特沃斯高通滤波.bmp');
x=0,y=0;
for i=1:N1
    for j=1:N2
        L1=(abs(s1(i,j)))^2;
        y=y+L1;
        L=(abs(g(i,j)))^2;
        x=x+L;
    end
end
L=y/x;%计算功率谱比


4.高通高斯
clc;clear;
img=imread('test4 copy.bmp');
p=im2double(img);
f=fft2(p);%傅里叶变换
g=fftshift(f);%转换数据矩阵
[N1,N2]=size(g);
D0=25;%截止频率
n1=fix(N1/2);
n2=fix(N2/2);
for i=1:N1
   for j=1:N2
        d(i,j)=sqrt((i-n1)^2+(j-n2)^2);
        h1(i,j)=1-exp(-d(i,j)^2/(2*D0^2));%计算低通滤波器传递函数
        s1(i,j)=h1(i,j)*g(i,j);
   end
end
s=im2uint8(real(ifft2(ifftshift(s1))));
figure;
subplot(1,2,1);
imshow(img);
title('test4原图');
subplot(1,2,2);
imshow(s);
title('test4经高斯高通滤波');
imwrite(s,'test4经高斯低通滤波.bmp');
x=0,y=0;
for i=1:N1
    for j=1:N2
        L1=(abs(s1(i,j)))^2;
        y=y+L1;
        L=(abs(g(i,j)))^2;
        x=x+L;
    end
end
L=y/x;%计算功率谱比



5.拉普拉斯
clc;clear;
img=imread('test4 copy.bmp');
p=im2double(img);
f=fft2(p);%傅里叶变换
g=fftshift(f);%转换数据矩阵
[N1,N2]=size(g);
n1=fix(N1/2);
n2=fix(N2/2);
for i=1:N1
   for j=1:N2
        d(i,j)=sqrt((i-n1)^2+(j-n2)^2);
        h1(i,j)=(-4)*pi^2*d(i,j)^2;%计算低通滤波器传递函数
        s1(i,j)=(1-h1(i,j))*g(i,j);
   end
end
s=im2uint8(real(ifft2(ifftshift(s1))));        
figure;
subplot(1,2,1);
imshow(img);
title('test4原图');
subplot(1,2,2);
imshow(s);
title('test4经拉普拉斯高通滤波');
imwrite(s,'test4经拉普拉斯高通滤波.bmp');



6.unmask
clc;clear;
img=imread('test4 copy.bmp');
p=im2double(img);
f=fft2(p);%傅里叶变换
g=fftshift(f);%转换数据矩阵
[N1,N2]=size(g);
n1=fix(N1/2);
n2=fix(N2/2);
k1=1;k2=50;D0=100;
for i=1:N1
   for j=1:N2
        d(i,j)=sqrt((i-n1)^2+(j-n2)^2);
        h1(i,j)=1-exp(-d(i,j)^2/(2*D0^2));;%计算低通滤波器传递函数
        s1(i,j)=(k1+k2*h1(i,j))*g(i,j);
   end
end
s=im2uint8(real(ifft2(ifftshift(s1))));        
figure;
subplot(1,2,1);
imshow(img);
title('test4原图');
subplot(1,2,2);
imshow(s);
title('test4unmask高通滤波');
imwrite(s,'test4经unmask高通滤波.bmp');









